apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: elasticsearch
    name: elasticsearch
  spec:
    ports:
    - name: "9200"
      port: 9200
      targetPort: 9200
    - name: "9300"
      port: 9300
      targetPort: 9300
    selector:
      io.kompose.service: elasticsearch
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.files.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/files`))
    creationTimestamp: null
    labels:
      io.komtest kubernetes after retsrtaing minikube
pose.service: file-management-service
    name: file-management-service
  spec:
    ports:
    - name: "3011"
      port: 3011
      targetPort: 3011
    selector:
      io.kompose.service: file-management-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.front.rule: (Host(`pfe.localhost`) && PathPrefix(`/`))
    creationTimestamp: null
    labels:
      io.kompose.service: front-end
    name: front-end
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    selector:
      io.kompose.service: front-end
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: hadoop-docker-node
    name: hadoop-docker-node
  spec:
    ports:
    - name: "8020"
      port: 8020
      targetPort: 8020
    - name: "50070"
      port: 50070
      targetPort: 50070
    - name: "4040"
      port: 4040
      targetPort: 4040
    - name: "8998"
      port: 8998
      targetPort: 8998
    - name: "8088"
      port: 8088
      targetPort: 8088
    selector:
      io.kompose.service: hadoop-docker-node
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: hystrix-dashboard
    name: hystrix-dashboard
  spec:
    ports:
    - name: "3014"
      port: 3014
      targetPort: 3014
    selector:
      io.kompose.service: hystrix-dashboard
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: jaeger
    name: jaeger
  spec:
    ports:
    - name: "5775"
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: "6831"
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: "6832"
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: "5778"
      port: 5778
      targetPort: 5778
    - name: "16686"
      port: 16686
      targetPort: 16686
    - name: "14268"
      port: 14268
      targetPort: 14268
    - name: "9411"
      port: 9411
      targetPort: 9411
    selector:
      io.kompose.service: jaeger
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: mongo
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongo
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: netdata
    name: netdata
  spec:
    ports:
    - name: "19999"
      port: 19999
      targetPort: 19999
    selector:
      io.kompose.service: netdata
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.notifs.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/notifs`))
    creationTimestamp: null
    labels:
      io.kompose.service: notification-service
    name: notification-service
  spec:
    ports:
    - name: "3010"
      port: 3010
      targetPort: 3010
    selector:
      io.kompose.service: notification-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
  spec:
    ports:
    - name: "15671"
      port: 15671
      targetPort: 15671
    - name: "15672"
      port: 15672
      targetPort: 15672
    - name: "25672"
      port: 25672
      targetPort: 25672
    - name: "4369"
      port: 4369
      targetPort: 4369
    - name: "4396"
      port: 4396
      targetPort: 4396
    - name: "5671"
      port: 5671
      targetPort: 5671
    - name: "5672"
      port: 5672
      targetPort: 5672
    selector:
      io.kompose.service: rabbitmq
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: reverse-proxy
    name: reverse-proxy
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 80
    - name: "8180"
      port: 8180
      targetPort: 8080
    selector:
      io.kompose.service: reverse-proxy
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.search.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/search`))
    creationTimestamp: null
    labels:
      io.kompose.service: search-service
    name: search-service
  spec:
    ports:
    - name: "3012"
      port: 3012
      targetPort: 3012
    selector:
      io.kompose.service: search-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: sonarqube
    name: sonarqube
  spec:
    ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
    selector:
      io.kompose.service: sonarqube
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.spark-manager.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/spark-manager`))
    creationTimestamp: null
    labels:
      io.kompose.service: spark-manager-service
    name: spark-manager-service
  spec:
    ports:
    - name: "3013"
      port: 3013
      targetPort: 3013
    selector:
      io.kompose.service: spark-manager-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: tika
    name: tika
  spec:
    ports:
    - name: "9998"
      port: 9998
      targetPort: 9998
    selector:
      io.kompose.service: tika
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: db
      spec:
        containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: sonar
          - name: POSTGRES_USER
            value: sonar
          image: postgres
          name: db
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql
            name: postgres-volume
          - mountPath: /var/lib/postgresql/data
            name: postgres-data-volume
        restartPolicy: Always
        volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: postgres-volume
        - name: postgres-data-volume
          persistentVolumeClaim:
            claimName: postgres-data-volume
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: postgres-volume
    name: postgres-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: postgres-data-volume
    name: postgres-data-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: elasticsearch
    name: elasticsearch
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: elasticsearch
      spec:
        containers:
        - env:
          - name: transport.host
            value: localhost
          image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
          name: elasticsearch
          ports:
          - containerPort: 9200
          - containerPort: 9300
          resources: {}
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: es-volume
        restartPolicy: Always
        volumes:
        - name: es-volume
          persistentVolumeClaim:
            claimName: es-volume
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: es-volume
    name: es-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.files.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/files`))
    creationTimestamp: null
    labels:
      io.kompose.service: file-management-service
    name: file-management-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: file-management-service
      spec:
        containers:
        - args:
          - java
          - -jar
          - /usr/app/file-management-service-0.0.1-SNAPSHOT.jar
          command:
          - /wait-for-it.sh
          - rabbitmq:5672
          - -t
          - "300"
          - --
          image: karimsaieh/pfe-file-management-service
          name: file-management-service
          ports:
          - containerPort: 3011
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.front.rule: (Host(`pfe.localhost`) && PathPrefix(`/`))
    creationTimestamp: null
    labels:
      io.kompose.service: front-end
    name: front-end
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: front-end
      spec:
        containers:
        - image: karimsaieh/pfe-front-end
          name: front-end
          ports:
          - containerPort: 3000
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: ftp-explorer-service
    name: ftp-explorer-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: ftp-explorer-service
      spec:
        containers:
        - args:
          - python
          - ./Main.py
          command:
          - /wait-for-it.sh
          - rabbitmq:5672
          - -t
          - "300"
          - --
          image: karimsaieh/pfe-ftp-explorer-service
          name: ftp-explorer-service
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: hadoop-docker-node
    name: hadoop-docker-node
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: hadoop-docker-node
      spec:
        containers:
        - image: karimsaieh/pfe-hadoop-docker-node
          name: hadoop-docker-node
          ports:
          - containerPort: 8020
          - containerPort: 50070
          - containerPort: 4040
          - containerPort: 8998
          - containerPort: 8088
          resources: {}
          tty: true
          volumeMounts:
          - mountPath: /usr/local/hadoop_store/hdfs/
            name: hadoop-volume
        restartPolicy: Always
        volumes:
        - name: hadoop-volume
          persistentVolumeClaim:
            claimName: hadoop-volume
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: hadoop-volume
    name: hadoop-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: hystrix-dashboard
    name: hystrix-dashboard
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: hystrix-dashboard
      spec:
        containers:
        - image: karimsaieh/pfe-hystrix-dashboard
          name: hystrix-dashboard
          ports:
          - containerPort: 3014
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: jaeger
    name: jaeger
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: jaeger
      spec:
        containers:
        - env:
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            value: "9411"
          image: jaegertracing/all-in-one:1.7
          name: jaeger
          ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          - containerPort: 5778
          - containerPort: 16686
          - containerPort: 14268
          - containerPort: 9411
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: mongo
    name: mongo
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongo
      spec:
        containers:
        - image: mongo
          name: mongo
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongo-volume
        restartPolicy: Always
        volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-volume
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongo-volume
    name: mongo-volume
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: netdata
    name: netdata
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: netdata
      spec:
        containers:
        - image: netdata/netdata
          name: netdata
          ports:
          - containerPort: 19999
          resources: {}
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
          volumeMounts:
          - mountPath: /host/proc
            name: netdata-claim0
            readOnly: true
          - mountPath: /host/sys
            name: netdata-claim1
            readOnly: true
          - mountPath: /var/run/docker.sock
            name: netdata-claim2
            readOnly: true
        hostname: example.com
        restartPolicy: Always
        volumes:
        - name: netdata-claim0
          persistentVolumeClaim:
            claimName: netdata-claim0
            readOnly: true
        - name: netdata-claim1
          persistentVolumeClaim:
            claimName: netdata-claim1
            readOnly: true
        - name: netdata-claim2
          persistentVolumeClaim:
            claimName: netdata-claim2
            readOnly: true
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: netdata-claim0
    name: netdata-claim0
  spec:
    accessModes:
    - ReadOnlyMany
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: netdata-claim1
    name: netdata-claim1
  spec:
    accessModes:
    - ReadOnlyMany
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: netdata-claim2
    name: netdata-claim2
  spec:
    accessModes:
    - ReadOnlyMany
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.notifs.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/notifs`))
    creationTimestamp: null
    labels:
      io.kompose.service: notification-service
    name: notification-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: notification-service
      spec:
        containers:
        - args:
          - npm
          - start
          command:
          - /wait-for-it.sh
          - rabbitmq:5672
          - -t
          - "300"
          - --
          image: karimsaieh/pfe-notification-service
          name: notification-service
          ports:
          - containerPort: 3010
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3.7-management
          name: rabbitmq
          ports:
          - containerPort: 15671
          - containerPort: 15672
          - containerPort: 25672
          - containerPort: 4369
          - containerPort: 4396
          - containerPort: 5671
          - containerPort: 5672
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: redis
    name: redis
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis
      spec:
        containers:
        - image: redis
          name: redis
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: reverse-proxy
    name: reverse-proxy
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: reverse-proxy
      spec:
        containers:
        - args:
          - --api
          - --providers.docker
          image: traefik:v2.0
          name: reverse-proxy
          ports:
          - containerPort: 80
          - containerPort: 8080
          resources: {}
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: reverse-proxy-claim0
          - mountPath: /etc/traefik/traefik.toml
            name: reverse-proxy-claim1
        restartPolicy: Always
        volumes:
        - name: reverse-proxy-claim0
          persistentVolumeClaim:
            claimName: reverse-proxy-claim0
        - name: reverse-proxy-claim1
          persistentVolumeClaim:
            claimName: reverse-proxy-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: reverse-proxy-claim0
    name: reverse-proxy-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: reverse-proxy-claim1
    name: reverse-proxy-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.search.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/search`))
    creationTimestamp: null
    labels:
      io.kompose.service: search-service
    name: search-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: search-service
      spec:
        containers:
        - args:
          - java
          - -jar
          - /usr/app/search-service-0.0.1-SNAPSHOT.jar
          command:
          - /wait-for-it.sh
          - redis:6379
          - -t
          - "300"
          - --
          - /wait-for-it.sh
          - elasticsearch:9200
          - -t
          - "300"
          - --
          - /wait-for-it.sh
          - rabbitmq:5672
          - -t
          - "300"
          - --
          image: karimsaieh/pfe-search-service
          name: search-service
          ports:
          - containerPort: 3012
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: sonarqube
    name: sonarqube
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: sonarqube
      spec:
        containers:
        - env:
          - name: sonar.jdbc.url
            value: jdbc:postgresql://db:5432/sonar
          image: sonarqube
          name: sonarqube
          ports:
          - containerPort: 9000
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
      traefik.http.routers.spark-manager.rule: (Host(`pfe.localhost`) && PathPrefix(`/api/v1/spark-manager`))
    creationTimestamp: null
    labels:
      io.kompose.service: spark-manager-service
    name: spark-manager-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: spark-manager-service
      spec:
        containers:
        - image: karimsaieh/pfe-spark-manager-service
          name: spark-manager-service
          ports:
          - containerPort: 3013
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: tika
    name: tika
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: tika
      spec:
        containers:
        - image: logicalspark/docker-tikaserver
          name: tika
          ports:
          - containerPort: 9998
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o z
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: web-scraping-service
    name: web-scraping-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: web-scraping-service
      spec:
        containers:
        - args:
          - python
          - ./Main.py
          command:
          - /wait-for-it.sh
          - rabbitmq:5672
          - -t
          - "300"
          - --
          image: karimsaieh/pfe-web-scraping-service
          name: web-scraping-service
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

