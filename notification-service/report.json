[{"filePath":"/media/karim/FastData/Mega/pfe/Code/Project/notification-service/cors.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/karim/FastData/Mega/pfe/Code/Project/notification-service/index.js","messages":[{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":27,"column":38,"nodeType":"Program","fix":{"range":[879,880],"text":""}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"// in production , env variables should be set directly in host => best practice\n\nif (process.env.ENV !== 'staging') {\n  require('dotenv').config(); // eslint-disable-line global-require\n}\n\nconst express = require('express');\n\nconst app = express();\nconst amqp = require('amqplib/callback_api');\nconst sse = require('./sse');\nconst cors = require('./cors');\n\napp.use(sse);\napp.use(cors);\n\napp.get('/api/v1/notifs/stream', (req, res) => {\n  res.sseSetup();\n  setInterval(() => {\n    res.sseSend({ event: 'alive' }); // sino traefik will give 502 error\n  }, 60000);\n  amqp.connect(`amqp://${process.env.RABBITMQ_HOST}`, (_errCon, conn) => {\n    conn.createChannel((_errCh, ch) => {\n      const ex = 'notifications_exchange';\n      ch.assertExchange(ex, 'fanout', { durable: false });\n      ch.assertQueue('', { exclusive: true }, (_err, q) => {\n        ch.bindQueue(q.queue, ex, '' );\n        ch.consume(\n          q.queue,\n          (msg) => {\n            if (msg.content) {\n              res.sseSend(JSON.parse(msg.content.toString()));\n            }\n          },\n          { noAck: true },\n        );\n      });\n      req.on('close', () => {\n        ch.close();\n        conn.close();\n      });\n\n      req.on('end', () => {\n        ch.close();\n        conn.close();\n      });\n    });\n  });\n});\n\napp.listen(3010, () => {});\n"},{"filePath":"/media/karim/FastData/Mega/pfe/Code/Project/notification-service/notification-consumer.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/media/karim/FastData/Mega/pfe/Code/Project/notification-service/sse.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0}]